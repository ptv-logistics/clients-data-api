/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The attributes assigned to each of the selected roads.
 * @export
 * @interface RoadAttributes
 */
export interface RoadAttributes {
    /**
     * The road is prohibited, it will not be used in route calculation. This parameter is mutually exclusive with **allowed**. Setting this value to false does not have a meaning.
     * @type {boolean}
     * @memberof RoadAttributes
     */
    prohibited?: boolean;
    /**
     * The road is allowed and used in route calculation for the following cases:
     *   * One-way roads are accessible in all directions, depending on **RoadDirectionType**.
     *   * Roads with vehicle restrictions like height, weight or hazardous load restrictions. 
     *   * Roads restricted for certain vehicle types due to e.g. environmental zones.
     * Traffic situations cannot be lifted by setting **allowed**.
     * This parameter is mutually exclusive with **prohibited**.
     * Instances of **prohibited** in different **RoadsToBeAttributed** objects or scenarios will overwrite **allowed**.
     * Setting this value to false does not have a meaning.
     * @type {boolean}
     * @memberof RoadAttributes
     */
    allowed?: boolean;
    /**
     * The driving speed on this road is set relative to this value [%].
     * This is useful when, for example, dense traffic is known or expected due to public events or because lanes are closed.
     * Settings this value to 70 means that the driving speed is 70% of the originally assumed driving speed.
     * @type {number}
     * @memberof RoadAttributes
     */
    relativeSpeed?: number;
    /**
     * The maximum allowed vehicle weight on the road [kg]. If the map already contains a weight limit, it is overwritten.
     * @type {number}
     * @memberof RoadAttributes
     */
    weightLimit?: number;
    /**
     * The maximum allowed vehicle height on the road [cm]. If the map already contains a height limit, it is overwritten.
     * @type {number}
     * @memberof RoadAttributes
     */
    heightLimit?: number;
    /**
     * The maximum allowed vehicle width on the road [cm]. If the map already contains a width limit, it is overwritten.
     * @type {number}
     * @memberof RoadAttributes
     */
    widthLimit?: number;
}

/**
 * Check if a given object implements the RoadAttributes interface.
 */
export function instanceOfRoadAttributes(value: object): value is RoadAttributes {
    return true;
}

export function RoadAttributesFromJSON(json: any): RoadAttributes {
    return RoadAttributesFromJSONTyped(json, false);
}

export function RoadAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoadAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'prohibited': json['prohibited'] == null ? undefined : json['prohibited'],
        'allowed': json['allowed'] == null ? undefined : json['allowed'],
        'relativeSpeed': json['relativeSpeed'] == null ? undefined : json['relativeSpeed'],
        'weightLimit': json['weightLimit'] == null ? undefined : json['weightLimit'],
        'heightLimit': json['heightLimit'] == null ? undefined : json['heightLimit'],
        'widthLimit': json['widthLimit'] == null ? undefined : json['widthLimit'],
    };
}

export function RoadAttributesToJSON(value?: RoadAttributes | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'prohibited': value['prohibited'],
        'allowed': value['allowed'],
        'relativeSpeed': value['relativeSpeed'],
        'weightLimit': value['weightLimit'],
        'heightLimit': value['heightLimit'],
        'widthLimit': value['widthLimit'],
    };
}

