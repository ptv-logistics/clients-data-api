/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GeographicalUnit } from './GeographicalUnit';
import {
    GeographicalUnitFromJSON,
    GeographicalUnitFromJSONTyped,
    GeographicalUnitToJSON,
} from './GeographicalUnit';
import type { Features } from './Features';
import {
    FeaturesFromJSON,
    FeaturesFromJSONTyped,
    FeaturesToJSON,
} from './Features';

/**
 * 
 * @export
 * @interface MapInformationResponse
 */
export interface MapInformationResponse {
    /**
     * 
     * @type {Features}
     * @memberof MapInformationResponse
     */
    features: Features;
    /**
     * Lists the available data and their features for each geographical unit, usually a country or a state, sorted by their ISO 3166 code.
     * @type {Array<GeographicalUnit>}
     * @memberof MapInformationResponse
     */
    geographicalUnits: Array<GeographicalUnit>;
}

/**
 * Check if a given object implements the MapInformationResponse interface.
 */
export function instanceOfMapInformationResponse(value: object): value is MapInformationResponse {
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('geographicalUnits' in value) || value['geographicalUnits'] === undefined) return false;
    return true;
}

export function MapInformationResponseFromJSON(json: any): MapInformationResponse {
    return MapInformationResponseFromJSONTyped(json, false);
}

export function MapInformationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MapInformationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'features': FeaturesFromJSON(json['features']),
        'geographicalUnits': ((json['geographicalUnits'] as Array<any>).map(GeographicalUnitFromJSON)),
    };
}

export function MapInformationResponseToJSON(value?: MapInformationResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'features': FeaturesToJSON(value['features']),
        'geographicalUnits': ((value['geographicalUnits'] as Array<any>).map(GeographicalUnitToJSON)),
    };
}

