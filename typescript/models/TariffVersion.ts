/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The tariff version.
 * @export
 * @interface TariffVersion
 */
export interface TariffVersion {
    /**
     * The version.
     * @type {string}
     * @memberof TariffVersion
     */
    version: string;
    /**
     * The description of the tariff version. Only present if major changes are introduced such as introducing new
     * vehicle classes or adding or removing toll roads.
     * @type {string}
     * @memberof TariffVersion
     */
    description?: string;
    /**
     * The date at which this tariff version becomes valid formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * @type {Date}
     * @memberof TariffVersion
     */
    validFrom: Date;
}

/**
 * Check if a given object implements the TariffVersion interface.
 */
export function instanceOfTariffVersion(value: object): value is TariffVersion {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('validFrom' in value) || value['validFrom'] === undefined) return false;
    return true;
}

export function TariffVersionFromJSON(json: any): TariffVersion {
    return TariffVersionFromJSONTyped(json, false);
}

export function TariffVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TariffVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'description': json['description'] == null ? undefined : json['description'],
        'validFrom': (new Date(json['validFrom'])),
    };
}

export function TariffVersionToJSON(value?: TariffVersion | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'version': value['version'],
        'description': value['description'],
        'validFrom': ((value['validFrom']).toISOString().substring(0,10)),
    };
}

