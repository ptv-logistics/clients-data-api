/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CombinedTransportAttributes } from './CombinedTransportAttributes';
import {
    CombinedTransportAttributesFromJSON,
    CombinedTransportAttributesFromJSONTyped,
    CombinedTransportAttributesToJSON,
} from './CombinedTransportAttributes';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';

/**
 * 
 * @export
 * @interface CombinedTransportToBeAttributed
 */
export interface CombinedTransportToBeAttributed {
    /**
     * 
     * @type {Location}
     * @memberof CombinedTransportToBeAttributed
     */
    start: Location;
    /**
     * 
     * @type {Location}
     * @memberof CombinedTransportToBeAttributed
     */
    destination: Location;
    /**
     * The polyline of the combined transports in the format specified by **polylineFormat**.
     * 
     * Only present in responses, will be ignored in requests.
     * @type {string}
     * @memberof CombinedTransportToBeAttributed
     */
    polyline?: string;
    /**
     * The name of the combined transport.
     * 
     * Only present in responses, will be ignored in requests.
     * @type {string}
     * @memberof CombinedTransportToBeAttributed
     */
    name?: string;
    /**
     * 
     * @type {CombinedTransportAttributes}
     * @memberof CombinedTransportToBeAttributed
     */
    attributes: CombinedTransportAttributes;
    /**
     * If **roadsToBeAttributed** or **combinedTransportsToBeAttributed** could not be matched to a new map after an update they are marked with this boolean flag.
     * Unmatched **roadsToBeAttributed** or **combinedTransportsToBeAttributed** might cause some unwanted changes of behavior for the scenario.
     * This parameter must not be true if it is sent as part of a request.
     * @type {boolean}
     * @memberof CombinedTransportToBeAttributed
     */
    unmatchedAfterMapUpdate?: boolean;
    /**
     * A description of this set of attributed combined transports which is useful to refer to that in an application.
     * @type {string}
     * @memberof CombinedTransportToBeAttributed
     */
    description?: string;
}

/**
 * Check if a given object implements the CombinedTransportToBeAttributed interface.
 */
export function instanceOfCombinedTransportToBeAttributed(value: object): value is CombinedTransportToBeAttributed {
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    return true;
}

export function CombinedTransportToBeAttributedFromJSON(json: any): CombinedTransportToBeAttributed {
    return CombinedTransportToBeAttributedFromJSONTyped(json, false);
}

export function CombinedTransportToBeAttributedFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombinedTransportToBeAttributed {
    if (json == null) {
        return json;
    }
    return {
        
        'start': LocationFromJSON(json['start']),
        'destination': LocationFromJSON(json['destination']),
        'polyline': json['polyline'] == null ? undefined : json['polyline'],
        'name': json['name'] == null ? undefined : json['name'],
        'attributes': CombinedTransportAttributesFromJSON(json['attributes']),
        'unmatchedAfterMapUpdate': json['unmatchedAfterMapUpdate'] == null ? undefined : json['unmatchedAfterMapUpdate'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function CombinedTransportToBeAttributedToJSON(value?: CombinedTransportToBeAttributed | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'start': LocationToJSON(value['start']),
        'destination': LocationToJSON(value['destination']),
        'polyline': value['polyline'],
        'name': value['name'],
        'attributes': CombinedTransportAttributesToJSON(value['attributes']),
        'unmatchedAfterMapUpdate': value['unmatchedAfterMapUpdate'],
        'description': value['description'],
    };
}

