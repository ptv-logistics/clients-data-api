/*
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.data.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.data.model.MonetaryCostOptions;
import com.ptvgroup.developer.client.data.model.RegionType;
import com.ptvgroup.developer.client.data.model.Vehicle;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.data.ApiClient;
/**
 * PredefinedVehicleProfile
 */
@JsonPropertyOrder({
  PredefinedVehicleProfile.JSON_PROPERTY_NAME,
  PredefinedVehicleProfile.JSON_PROPERTY_DESCRIPTION,
  PredefinedVehicleProfile.JSON_PROPERTY_REGION,
  PredefinedVehicleProfile.JSON_PROPERTY_VEHICLE,
  PredefinedVehicleProfile.JSON_PROPERTY_CURRENCY,
  PredefinedVehicleProfile.JSON_PROPERTY_MONETARY_COST_OPTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-29T11:47:47.660663945Z[Etc/UTC]", comments = "Generator version: 7.8.0")
public class PredefinedVehicleProfile {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_REGION = "region";
  private RegionType region;

  public static final String JSON_PROPERTY_VEHICLE = "vehicle";
  private Vehicle vehicle;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_MONETARY_COST_OPTIONS = "monetaryCostOptions";
  private MonetaryCostOptions monetaryCostOptions;

  public PredefinedVehicleProfile() { 
  }

  public PredefinedVehicleProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the predefined profile.
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public PredefinedVehicleProfile description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the predefined profile.
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PredefinedVehicleProfile region(RegionType region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public RegionType getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegion(RegionType region) {
    this.region = region;
  }


  public PredefinedVehicleProfile vehicle(Vehicle vehicle) {
    this.vehicle = vehicle;
    return this;
  }

  /**
   * Get vehicle
   * @return vehicle
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEHICLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Vehicle getVehicle() {
    return vehicle;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicle(Vehicle vehicle) {
    this.vehicle = vehicle;
  }


  public PredefinedVehicleProfile currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * The default currency for the predefined vehicle according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PredefinedVehicleProfile monetaryCostOptions(MonetaryCostOptions monetaryCostOptions) {
    this.monetaryCostOptions = monetaryCostOptions;
    return this;
  }

  /**
   * Get monetaryCostOptions
   * @return monetaryCostOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONETARY_COST_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MonetaryCostOptions getMonetaryCostOptions() {
    return monetaryCostOptions;
  }


  @JsonProperty(JSON_PROPERTY_MONETARY_COST_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonetaryCostOptions(MonetaryCostOptions monetaryCostOptions) {
    this.monetaryCostOptions = monetaryCostOptions;
  }


  /**
   * Return true if this PredefinedVehicleProfile object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PredefinedVehicleProfile predefinedVehicleProfile = (PredefinedVehicleProfile) o;
    return Objects.equals(this.name, predefinedVehicleProfile.name) &&
        Objects.equals(this.description, predefinedVehicleProfile.description) &&
        Objects.equals(this.region, predefinedVehicleProfile.region) &&
        Objects.equals(this.vehicle, predefinedVehicleProfile.vehicle) &&
        Objects.equals(this.currency, predefinedVehicleProfile.currency) &&
        Objects.equals(this.monetaryCostOptions, predefinedVehicleProfile.monetaryCostOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, region, vehicle, currency, monetaryCostOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PredefinedVehicleProfile {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    monetaryCostOptions: ").append(toIndentedString(monetaryCostOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `region` to the URL query string
    if (getRegion() != null) {
      joiner.add(String.format("%sregion%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRegion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vehicle` to the URL query string
    if (getVehicle() != null) {
      joiner.add(getVehicle().toUrlQueryString(prefix + "vehicle" + suffix));
    }

    // add `currency` to the URL query string
    if (getCurrency() != null) {
      joiner.add(String.format("%scurrency%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCurrency()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `monetaryCostOptions` to the URL query string
    if (getMonetaryCostOptions() != null) {
      joiner.add(getMonetaryCostOptions().toUrlQueryString(prefix + "monetaryCostOptions" + suffix));
    }

    return joiner.toString();
  }
}

