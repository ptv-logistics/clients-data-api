/*
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.data.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.data.model.CombinedTransportAttributes;
import com.ptvgroup.developer.client.data.model.Location;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.data.ApiClient;
/**
 * CombinedTransportToBeAttributed
 */
@JsonPropertyOrder({
  CombinedTransportToBeAttributed.JSON_PROPERTY_START,
  CombinedTransportToBeAttributed.JSON_PROPERTY_DESTINATION,
  CombinedTransportToBeAttributed.JSON_PROPERTY_POLYLINE,
  CombinedTransportToBeAttributed.JSON_PROPERTY_NAME,
  CombinedTransportToBeAttributed.JSON_PROPERTY_ATTRIBUTES,
  CombinedTransportToBeAttributed.JSON_PROPERTY_UNMATCHED_AFTER_MAP_UPDATE,
  CombinedTransportToBeAttributed.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-29T11:47:47.660663945Z[Etc/UTC]", comments = "Generator version: 7.8.0")
public class CombinedTransportToBeAttributed {
  public static final String JSON_PROPERTY_START = "start";
  private Location start;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private Location destination;

  public static final String JSON_PROPERTY_POLYLINE = "polyline";
  private String polyline;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private CombinedTransportAttributes attributes;

  public static final String JSON_PROPERTY_UNMATCHED_AFTER_MAP_UPDATE = "unmatchedAfterMapUpdate";
  private Boolean unmatchedAfterMapUpdate = false;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public CombinedTransportToBeAttributed() { 
  }

  public CombinedTransportToBeAttributed start(Location start) {
    this.start = start;
    return this;
  }

  /**
   * Get start
   * @return start
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Location getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(Location start) {
    this.start = start;
  }


  public CombinedTransportToBeAttributed destination(Location destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Location getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(Location destination) {
    this.destination = destination;
  }


  public CombinedTransportToBeAttributed polyline(String polyline) {
    this.polyline = polyline;
    return this;
  }

  /**
   * The polyline of the combined transports in the format specified by **polylineFormat**.  Only present in responses, will be ignored in requests.
   * @return polyline
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POLYLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPolyline() {
    return polyline;
  }


  @JsonProperty(JSON_PROPERTY_POLYLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolyline(String polyline) {
    this.polyline = polyline;
  }


  public CombinedTransportToBeAttributed name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the combined transport.  Only present in responses, will be ignored in requests.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CombinedTransportToBeAttributed attributes(CombinedTransportAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CombinedTransportAttributes getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttributes(CombinedTransportAttributes attributes) {
    this.attributes = attributes;
  }


  public CombinedTransportToBeAttributed unmatchedAfterMapUpdate(Boolean unmatchedAfterMapUpdate) {
    this.unmatchedAfterMapUpdate = unmatchedAfterMapUpdate;
    return this;
  }

  /**
   * If **roadsToBeAttributed** or **combinedTransportsToBeAttributed** could not be matched to a new map after an update they are marked with this boolean flag. Unmatched **roadsToBeAttributed** or **combinedTransportsToBeAttributed** might cause some unwanted changes of behavior for the scenario. This parameter must not be true if it is sent as part of a request.
   * @return unmatchedAfterMapUpdate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNMATCHED_AFTER_MAP_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getUnmatchedAfterMapUpdate() {
    return unmatchedAfterMapUpdate;
  }


  @JsonProperty(JSON_PROPERTY_UNMATCHED_AFTER_MAP_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnmatchedAfterMapUpdate(Boolean unmatchedAfterMapUpdate) {
    this.unmatchedAfterMapUpdate = unmatchedAfterMapUpdate;
  }


  public CombinedTransportToBeAttributed description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of this set of attributed combined transports which is useful to refer to that in an application.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Return true if this CombinedTransportToBeAttributed object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CombinedTransportToBeAttributed combinedTransportToBeAttributed = (CombinedTransportToBeAttributed) o;
    return Objects.equals(this.start, combinedTransportToBeAttributed.start) &&
        Objects.equals(this.destination, combinedTransportToBeAttributed.destination) &&
        Objects.equals(this.polyline, combinedTransportToBeAttributed.polyline) &&
        Objects.equals(this.name, combinedTransportToBeAttributed.name) &&
        Objects.equals(this.attributes, combinedTransportToBeAttributed.attributes) &&
        Objects.equals(this.unmatchedAfterMapUpdate, combinedTransportToBeAttributed.unmatchedAfterMapUpdate) &&
        Objects.equals(this.description, combinedTransportToBeAttributed.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, destination, polyline, name, attributes, unmatchedAfterMapUpdate, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CombinedTransportToBeAttributed {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    polyline: ").append(toIndentedString(polyline)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    unmatchedAfterMapUpdate: ").append(toIndentedString(unmatchedAfterMapUpdate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `start` to the URL query string
    if (getStart() != null) {
      joiner.add(getStart().toUrlQueryString(prefix + "start" + suffix));
    }

    // add `destination` to the URL query string
    if (getDestination() != null) {
      joiner.add(getDestination().toUrlQueryString(prefix + "destination" + suffix));
    }

    // add `polyline` to the URL query string
    if (getPolyline() != null) {
      joiner.add(String.format("%spolyline%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPolyline()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `attributes` to the URL query string
    if (getAttributes() != null) {
      joiner.add(getAttributes().toUrlQueryString(prefix + "attributes" + suffix));
    }

    // add `unmatchedAfterMapUpdate` to the URL query string
    if (getUnmatchedAfterMapUpdate() != null) {
      joiner.add(String.format("%sunmatchedAfterMapUpdate%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getUnmatchedAfterMapUpdate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

