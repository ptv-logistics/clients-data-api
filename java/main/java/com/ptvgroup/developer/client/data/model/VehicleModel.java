/*
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.data.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.data.model.Battery;
import com.ptvgroup.developer.client.data.model.Commercial;
import com.ptvgroup.developer.client.data.model.Engine;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.data.ApiClient;
/**
 * VehicleModel
 */
@JsonPropertyOrder({
  VehicleModel.JSON_PROPERTY_ID,
  VehicleModel.JSON_PROPERTY_PREDEFINED_PROFILE,
  VehicleModel.JSON_PROPERTY_VEHICLE_TYPE,
  VehicleModel.JSON_PROPERTY_COMMERCIAL,
  VehicleModel.JSON_PROPERTY_ENGINE,
  VehicleModel.JSON_PROPERTY_BATTERY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-29T11:47:47.660663945Z[Etc/UTC]", comments = "Generator version: 7.8.0")
public class VehicleModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_PREDEFINED_PROFILE = "predefinedProfile";
  private String predefinedProfile;

  public static final String JSON_PROPERTY_VEHICLE_TYPE = "vehicleType";
  private String vehicleType;

  public static final String JSON_PROPERTY_COMMERCIAL = "commercial";
  private Commercial commercial;

  public static final String JSON_PROPERTY_ENGINE = "engine";
  private Engine engine;

  public static final String JSON_PROPERTY_BATTERY = "battery";
  private Battery battery;

  public VehicleModel() { 
  }

  @JsonCreator
  public VehicleModel(
    @JsonProperty(JSON_PROPERTY_ID) UUID id
  ) {
  this();
    this.id = id;
  }

  /**
   * The ID of the vehicle model. It is needed to identify a model-based vehicle in the Routing API.
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }




  public VehicleModel predefinedProfile(String predefinedProfile) {
    this.predefinedProfile = predefinedProfile;
    return this;
  }

  /**
   * The predefined profile on which this vehicle model is based. Relevant for calculating routes with this vehicle model in Routing API.
   * @return predefinedProfile
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PREDEFINED_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPredefinedProfile() {
    return predefinedProfile;
  }


  @JsonProperty(JSON_PROPERTY_PREDEFINED_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPredefinedProfile(String predefinedProfile) {
    this.predefinedProfile = predefinedProfile;
  }


  public VehicleModel vehicleType(String vehicleType) {
    this.vehicleType = vehicleType;
    return this;
  }

  /**
   * The type of the vehicle.  The model is able to calculate the consumption of combinations of tractor-like vehicles and trailer-like ones. The following vehicle types are supported.  Tractor-like vehicle types: * &#x60;TRUCK&#x60; - Truck. Total permitted weight &gt; 7.5t. * &#x60;LCV&#x60; - Light Commercial Vehicle. Total permitted weight &lt; 7.5t. * &#x60;SCV&#x60; - Small Commercial Vehicle. Total permitted weight &lt; 3.5t.  Trailer-like vehicle types: * &#x60;TRAILER&#x60; - Trailer * &#x60;SEMI_TRAILER&#x60; - Semi-trailer * &#x60;BODY&#x60; - Body  This list can be extended at any time, clients should handle unknown values properly. Relevant for &#x60;range calculation&#x60;.
   * @return vehicleType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEHICLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getVehicleType() {
    return vehicleType;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicleType(String vehicleType) {
    this.vehicleType = vehicleType;
  }


  public VehicleModel commercial(Commercial commercial) {
    this.commercial = commercial;
    return this;
  }

  /**
   * Get commercial
   * @return commercial
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Commercial getCommercial() {
    return commercial;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommercial(Commercial commercial) {
    this.commercial = commercial;
  }


  public VehicleModel engine(Engine engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Engine getEngine() {
    return engine;
  }


  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEngine(Engine engine) {
    this.engine = engine;
  }


  public VehicleModel battery(Battery battery) {
    this.battery = battery;
    return this;
  }

  /**
   * Get battery
   * @return battery
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BATTERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Battery getBattery() {
    return battery;
  }


  @JsonProperty(JSON_PROPERTY_BATTERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBattery(Battery battery) {
    this.battery = battery;
  }


  /**
   * Return true if this VehicleModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleModel vehicleModel = (VehicleModel) o;
    return Objects.equals(this.id, vehicleModel.id) &&
        Objects.equals(this.predefinedProfile, vehicleModel.predefinedProfile) &&
        Objects.equals(this.vehicleType, vehicleModel.vehicleType) &&
        Objects.equals(this.commercial, vehicleModel.commercial) &&
        Objects.equals(this.engine, vehicleModel.engine) &&
        Objects.equals(this.battery, vehicleModel.battery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, predefinedProfile, vehicleType, commercial, engine, battery);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    predefinedProfile: ").append(toIndentedString(predefinedProfile)).append("\n");
    sb.append("    vehicleType: ").append(toIndentedString(vehicleType)).append("\n");
    sb.append("    commercial: ").append(toIndentedString(commercial)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    battery: ").append(toIndentedString(battery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `predefinedProfile` to the URL query string
    if (getPredefinedProfile() != null) {
      joiner.add(String.format("%spredefinedProfile%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPredefinedProfile()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vehicleType` to the URL query string
    if (getVehicleType() != null) {
      joiner.add(String.format("%svehicleType%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVehicleType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `commercial` to the URL query string
    if (getCommercial() != null) {
      joiner.add(getCommercial().toUrlQueryString(prefix + "commercial" + suffix));
    }

    // add `engine` to the URL query string
    if (getEngine() != null) {
      joiner.add(getEngine().toUrlQueryString(prefix + "engine" + suffix));
    }

    // add `battery` to the URL query string
    if (getBattery() != null) {
      joiner.add(getBattery().toUrlQueryString(prefix + "battery" + suffix));
    }

    return joiner.toString();
  }
}

