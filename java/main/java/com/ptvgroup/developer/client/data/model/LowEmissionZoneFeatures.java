/*
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.data.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.data.ApiClient;
/**
 * The low-emission zone features available in the map. 
 */
@JsonPropertyOrder({
  LowEmissionZoneFeatures.JSON_PROPERTY_EXEMPTIBLE_LOW_EMISSION_ZONES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-29T11:47:47.660663945Z[Etc/UTC]", comments = "Generator version: 7.8.0")
public class LowEmissionZoneFeatures {
  public static final String JSON_PROPERTY_EXEMPTIBLE_LOW_EMISSION_ZONES = "exemptibleLowEmissionZones";
  private List<String> exemptibleLowEmissionZones = new ArrayList<>();

  public LowEmissionZoneFeatures() { 
  }

  public LowEmissionZoneFeatures exemptibleLowEmissionZones(List<String> exemptibleLowEmissionZones) {
    this.exemptibleLowEmissionZones = exemptibleLowEmissionZones;
    return this;
  }

  public LowEmissionZoneFeatures addExemptibleLowEmissionZonesItem(String exemptibleLowEmissionZonesItem) {
    if (this.exemptibleLowEmissionZones == null) {
      this.exemptibleLowEmissionZones = new ArrayList<>();
    }
    this.exemptibleLowEmissionZones.add(exemptibleLowEmissionZonesItem);
    return this;
  }

  /**
   * The list of low-emission zones that can be exempted. The values can be specified in the vehicle object of the Routing API to allow driving within the specified low-emission zones. This list can be extended at any time, clients should handle unknown values properly.
   * @return exemptibleLowEmissionZones
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXEMPTIBLE_LOW_EMISSION_ZONES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getExemptibleLowEmissionZones() {
    return exemptibleLowEmissionZones;
  }


  @JsonProperty(JSON_PROPERTY_EXEMPTIBLE_LOW_EMISSION_ZONES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExemptibleLowEmissionZones(List<String> exemptibleLowEmissionZones) {
    this.exemptibleLowEmissionZones = exemptibleLowEmissionZones;
  }


  /**
   * Return true if this LowEmissionZoneFeatures object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LowEmissionZoneFeatures lowEmissionZoneFeatures = (LowEmissionZoneFeatures) o;
    return Objects.equals(this.exemptibleLowEmissionZones, lowEmissionZoneFeatures.exemptibleLowEmissionZones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exemptibleLowEmissionZones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LowEmissionZoneFeatures {\n");
    sb.append("    exemptibleLowEmissionZones: ").append(toIndentedString(exemptibleLowEmissionZones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `exemptibleLowEmissionZones` to the URL query string
    if (getExemptibleLowEmissionZones() != null) {
      for (int i = 0; i < getExemptibleLowEmissionZones().size(); i++) {
        joiner.add(String.format("%sexemptibleLowEmissionZones%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getExemptibleLowEmissionZones().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

